// <auto-generated />
using System;
using ApiRest.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiRest.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250127081114_In")]
    partial class In
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiRest.Models.Boleta", b =>
                {
                    b.Property<int>("CodBoleta")
                        .HasColumnType("int");

                    b.Property<int>("CodTarjeta")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("RunCliente")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("CodBoleta");

                    b.HasIndex("CodTarjeta");

                    b.ToTable("Boleta");
                });

            modelBuilder.Entity("ApiRest.Models.Cliente", b =>
                {
                    b.Property<int>("NumRun")
                        .HasColumnType("int");

                    b.Property<string>("A_Materno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("A_Paterno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CodComuna")
                        .HasColumnType("int");

                    b.Property<int>("CodProvincia")
                        .HasColumnType("int");

                    b.Property<int>("CodRegion")
                        .HasColumnType("int");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DvRun")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P_Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("S_Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NumRun");

                    b.HasIndex("CodRegion", "CodProvincia", "CodComuna");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("ApiRest.Models.Comuna", b =>
                {
                    b.Property<int>("CodRegion")
                        .HasColumnType("int");

                    b.Property<int>("CodProvincia")
                        .HasColumnType("int");

                    b.Property<int>("CodComuna")
                        .HasColumnType("int");

                    b.Property<string>("NombreComuna")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodRegion", "CodProvincia", "CodComuna");

                    b.ToTable("Comuna");
                });

            modelBuilder.Entity("ApiRest.Models.DetalleBoleta", b =>
                {
                    b.Property<string>("CodDetalle")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("CodBoleta")
                        .HasColumnType("int");

                    b.Property<int>("CodProducto")
                        .HasColumnType("int");

                    b.Property<int>("PrecioUnitario")
                        .HasColumnType("int");

                    b.HasKey("CodDetalle");

                    b.HasIndex("CodBoleta");

                    b.HasIndex("CodProducto");

                    b.ToTable("DetalleBoleta");
                });

            modelBuilder.Entity("ApiRest.Models.Producto", b =>
                {
                    b.Property<int>("CodProducto")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.HasKey("CodProducto");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("ApiRest.Models.Provincia", b =>
                {
                    b.Property<int>("CodRegion")
                        .HasColumnType("int");

                    b.Property<int>("CodProvincia")
                        .HasColumnType("int");

                    b.Property<string>("NombreProvincia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodRegion", "CodProvincia");

                    b.ToTable("Provincia");
                });

            modelBuilder.Entity("ApiRest.Models.Region", b =>
                {
                    b.Property<int>("CodRegion")
                        .HasColumnType("int");

                    b.Property<string>("NombreRegion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodRegion");

                    b.ToTable("Region");
                });

            modelBuilder.Entity("ApiRest.Models.Stock", b =>
                {
                    b.Property<int>("CodStock")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("CodProducto")
                        .HasColumnType("int");

                    b.Property<int>("CodSucursal")
                        .HasColumnType("int");

                    b.HasKey("CodStock");

                    b.HasIndex("CodProducto");

                    b.HasIndex("CodSucursal");

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("ApiRest.Models.Sucursal", b =>
                {
                    b.Property<int>("CodSucursal")
                        .HasColumnType("int");

                    b.Property<int>("CodComuna")
                        .HasColumnType("int");

                    b.Property<int>("CodProvincia")
                        .HasColumnType("int");

                    b.Property<int>("CodRegion")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodSucursal");

                    b.HasIndex("CodRegion", "CodProvincia", "CodComuna");

                    b.ToTable("Sucursal");
                });

            modelBuilder.Entity("ApiRest.Models.Tarjeta", b =>
                {
                    b.Property<int>("CodTarjeta")
                        .HasColumnType("int");

                    b.Property<string>("NombreTransaccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodTarjeta");

                    b.ToTable("Tarjeta");
                });

            modelBuilder.Entity("BoletaCliente", b =>
                {
                    b.Property<int>("BoletaCodBoleta")
                        .HasColumnType("int");

                    b.Property<int>("ClienteNumRun")
                        .HasColumnType("int");

                    b.HasKey("BoletaCodBoleta", "ClienteNumRun");

                    b.HasIndex("ClienteNumRun");

                    b.ToTable("BoletaCliente");
                });

            modelBuilder.Entity("ApiRest.Models.Boleta", b =>
                {
                    b.HasOne("ApiRest.Models.Tarjeta", "Tarjeta")
                        .WithMany("Boleta")
                        .HasForeignKey("CodTarjeta")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tarjeta");
                });

            modelBuilder.Entity("ApiRest.Models.Cliente", b =>
                {
                    b.HasOne("ApiRest.Models.Region", "Region")
                        .WithMany("Cliente")
                        .HasForeignKey("CodRegion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ApiRest.Models.Provincia", "Provincia")
                        .WithMany("Cliente")
                        .HasForeignKey("CodRegion", "CodProvincia")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ApiRest.Models.Comuna", "Comuna")
                        .WithMany("Cliente")
                        .HasForeignKey("CodRegion", "CodProvincia", "CodComuna")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Comuna");

                    b.Navigation("Provincia");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("ApiRest.Models.Comuna", b =>
                {
                    b.HasOne("ApiRest.Models.Provincia", "Provincia")
                        .WithMany("Comuna")
                        .HasForeignKey("CodRegion", "CodProvincia")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("ApiRest.Models.DetalleBoleta", b =>
                {
                    b.HasOne("ApiRest.Models.Boleta", "Boleta")
                        .WithMany("DetalleBoleta")
                        .HasForeignKey("CodBoleta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiRest.Models.Producto", "Producto")
                        .WithMany("DetalleBoleta")
                        .HasForeignKey("CodProducto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Boleta");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("ApiRest.Models.Provincia", b =>
                {
                    b.HasOne("ApiRest.Models.Region", "Region")
                        .WithMany("Provincia")
                        .HasForeignKey("CodRegion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("ApiRest.Models.Stock", b =>
                {
                    b.HasOne("ApiRest.Models.Producto", "Producto")
                        .WithMany("Stock")
                        .HasForeignKey("CodProducto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ApiRest.Models.Sucursal", "Sucursal")
                        .WithMany("Stock")
                        .HasForeignKey("CodSucursal")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("ApiRest.Models.Sucursal", b =>
                {
                    b.HasOne("ApiRest.Models.Comuna", "Comuna")
                        .WithMany("Sucursal")
                        .HasForeignKey("CodRegion", "CodProvincia", "CodComuna")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Comuna");
                });

            modelBuilder.Entity("BoletaCliente", b =>
                {
                    b.HasOne("ApiRest.Models.Boleta", null)
                        .WithMany()
                        .HasForeignKey("BoletaCodBoleta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiRest.Models.Cliente", null)
                        .WithMany()
                        .HasForeignKey("ClienteNumRun")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ApiRest.Models.Boleta", b =>
                {
                    b.Navigation("DetalleBoleta");
                });

            modelBuilder.Entity("ApiRest.Models.Comuna", b =>
                {
                    b.Navigation("Cliente");

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("ApiRest.Models.Producto", b =>
                {
                    b.Navigation("DetalleBoleta");

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("ApiRest.Models.Provincia", b =>
                {
                    b.Navigation("Cliente");

                    b.Navigation("Comuna");
                });

            modelBuilder.Entity("ApiRest.Models.Region", b =>
                {
                    b.Navigation("Cliente");

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("ApiRest.Models.Sucursal", b =>
                {
                    b.Navigation("Stock");
                });

            modelBuilder.Entity("ApiRest.Models.Tarjeta", b =>
                {
                    b.Navigation("Boleta");
                });
#pragma warning restore 612, 618
        }
    }
}
